#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import os
import json
import agent
import agent.tasks

from jinja2 import Environment, FileSystemLoader, select_autoescape

files =["crowdsec_config/acquis.yaml"]
for f in files:
    os.remove(f) if os.path.exists(f) else None

jenv = Environment(
    loader=FileSystemLoader(os.getenv("AGENT_INSTALL_DIR")+"/templates"),
    autoescape=select_autoescape(),
    keep_trailing_newline=True,
)

rdb = agent.redis_connect()
modules=[]

for kenv in rdb.scan_iter(match='module/*/environment'):
    modules.append(kenv.removeprefix("module/").removesuffix("/environment"))

properties = {
    "modules" : modules
}

json_properties = json.dumps(properties)

template = jenv.get_template('acquis.yaml')
output = template.render(json.loads(json_properties))
with open("crowdsec_config/acquis.yaml","w") as f:
    f.write(output)


# smtp = agent.get_smarthost_settings(agent.redis_connect())
# if smtp['enabled'] == True and os.environ.get('receiver_emails'):
#     properties = {
#         "smtp_host" : smtp['host'],
#         "smtp_username": smtp['username'],
#         "smtp_password": smtp['password'],
#         "smtp_port": smtp['port'],
#         "sender_email": smtp['username'],
#         "receiver_emails": os.getenv('receiver_emails'),
#         "encryption_type": "none" if smtp['encrypt_smtp'] == "none" else "ssltls",
#         "auth_type": "login",
#     }
#     template = jenv.get_template('email.yaml')
#     output = template.render(json.loads(json_properties))
#     with open("crowdsec_config/notifications/email.yaml","w") as f:
#         f.write(output)

