#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import os
import json
import agent
import agent.tasks
import sys

from jinja2 import Environment, FileSystemLoader, select_autoescape

helo_host = os.environ.get("HELO_HOST", "")
receiver_emails = os.environ.get("RECEIVER_EMAILS", "")

smtp = agent.get_smarthost_settings(agent.redis_connect())

files =["crowdsec_config/notifications/email.yaml"]
for f in files:
    try:
        os.remove(f)
    except FileNotFoundError:
        pass

if receiver_emails:
    jenv = Environment(
        loader=FileSystemLoader(os.getenv("AGENT_INSTALL_DIR")+"/templates"),
        autoescape=select_autoescape(),
        keep_trailing_newline=True,
    )
    properties = {
        "smtp_host" : smtp['host'],
        "smtp_username": smtp['username'],
        "smtp_password": smtp['password'],
        "smtp_port": smtp['port'],
        "sender_email": smtp['username'],
        "receiver_emails": receiver_emails.split(","),
        "encryption_type": "none" if smtp['encrypt_smtp'] == "none" else "starttls" if smtp['encrypt_smtp'] == "starttls" else "ssltls",
        "auth_type": "login",
        "helo_host": helo_host,
    }
    template = jenv.get_template('email.yaml')
    output = template.render(properties)
    with open("crowdsec_config/notifications/email.yaml","w") as f:
        f.write(output)
