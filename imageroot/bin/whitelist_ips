#!/usr/bin/env python3

#
# Copyright (C) 2025 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#


import os
import subprocess
import time
import sys
import re
import agent
import socket

# do a loop 30s to wait crowdsec is up with cscli version
def wait_for_crowdsec():
    for i in range(30):
        try:
            output = subprocess.check_output(['cscli', 'version'], stderr=subprocess.STDOUT)
            if b'version' in output:
                return True
        except subprocess.CalledProcessError as e:
            print(f"Attempt {i + 1}: cscli not available yet, retrying...", file=sys.stderr)
            time.sleep(1)
    return False

if wait_for_crowdsec():
    # delete and create first the allowlist
    agent.run_helper("cscli", "allowlists", "delete","nethserver_whitelist")
    agent.run_helper("cscli", "allowlists", "create","nethserver_whitelist", "--description", "NethServer local allowlist")
    # get the whitelists from the environment variable
    whitelists = os.environ.get("WHITELISTS", "")
    if whitelists:
        # we want to sort ip, network
        whitelists_ip = []
        whitelists_cidr = []
        # test if the whitelist is a valid ip or cidr
        for test in whitelists.split(','):
            if re.search(r'([A-Za-z0-9-\.]+\.[A-Za-z]+$)', test):
                continue # skip domain names
            # test if the whitelist is a valid cidr
            elif re.search("./[0-9]+$", test):
                whitelists_cidr.append(test)
            # test ipv4
            elif re.search(r'([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)', test):
                whitelists_ip.append(test)
            # test ipv6
            elif re.search(r'(?:[a-zA-Z0-9]{0,4}:?){1,8}|(?:[a-zA-Z0-9]{0,4}:?){1,4}(?:[0-9]{1,3}\.){3}[0-9]{1,3}', test):
                whitelists_ip.append(test)
            else:
                print(f"Invalid IP or CIDR format: {test}", file=sys.stderr)
                continue

        properties = {
            "whitelists_ip": set(whitelists_ip),
            "whitelists_cidr": set(whitelists_cidr)
        }
        if properties["whitelists_ip"]:
            agent.run_helper("cscli", "allowlists", "add", "nethserver_whitelist", *properties["whitelists_ip"])
        if properties["whitelists_cidr"]:
            agent.run_helper("cscli", "allowlists", "add", "nethserver_whitelist", *properties["whitelists_cidr"])  
    # whitelist sos.nethesis.it if subscription is enabled
    rdb = agent.redis_connect(use_replica=True)
    system_id = rdb.hget("cluster/subscription", "system_id")
    if system_id:
        # resolve with python sos.nethesis.it
        try:
            ip = socket.gethostbyname("sos.nethesis.it")
            agent.run_helper("cscli", "allowlists", "add", "nethserver_whitelist", ip)
        except socket.gaierror:
            ip = "159.65.203.113"
            agent.run_helper("cscli", "allowlists", "add", "nethserver_whitelist", ip)

else:
    print("CrowdSec did not start in time.", file=sys.stderr)
    sys.exit(1)
